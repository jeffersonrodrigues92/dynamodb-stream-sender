AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Replicate Data Between Accounts

Parameters:

  HandlerParameter:
    Type: String
    Description: Name de Handler this function

  FunctionName:
    Type: String
    Description: Name this function.

  Runtime:
    Type: String
    Description: Version this java running in function

  Timeout:
    Type: String
    Description: Time for timeout in seconds

  MemorySize:
    Type: Number
    Description: Size the memory for function

  SecGroup:
    Type: String

  Versao:
    Type: String

  Product:
    Type: String
    Default: "dynamodb-stream-sender"

  AccountReplica:
    Type: String
  
  RegionReplica:
    Type: String
  
  MessageRetentionPeriod:
    Type: String
  
  VisibilityTimeout:
    Type: String

  ContentBasedDeduplication:
    Type: String
  
  FifoQueue:
    Type: String
  
  MaxReceiveCount:
    Type: String
  
  BatchSize:
    Type: String 

  Env:
    Type: String

Resources:
  dynamoDBReplicaData:
    Type: AWS::Serverless::Function
    Properties:
      Handler: !Ref HandlerParameter
      FunctionName: !Ref FunctionName
      Runtime: !Ref Runtime
      Timeout: !Ref Timeout
      MemorySize: !Ref MemorySize
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/LambdaExecutionRole
      Policies: AWSLambdaBasicExecutionRole
      CodeUri: ../../.serverless/dynamodb-stream-sender.zip

      VpcConfig:
        SecurityGroupIds:
          - !Ref SecGroup
        SubnetIds:
          - !ImportValue vpc-subnetPrvA
      Environment:
        Variables:
          REGION_REPLICA: !Ref RegionReplica
          ACCOUNT_REPLICA: !Ref AccountReplica
          FIFO_QUEUE_NAME: !Ref queueReplicaData
                    
      Tags:
        env : !Ref Env
        service : !Ref Product
        stack : !Sub ${AWS::StackName}
        squad : squad-cloud
        slack : squad-cloud
        email : cloud
        resource : lambda


  queueReplicaData:    
    Type: AWS::SQS::Queue
    Properties: 
      MessageRetentionPeriod: !Ref MessageRetentionPeriod 
      QueueName: queueReplicaData.fifo
      VisibilityTimeout: !Ref VisibilityTimeout
      ContentBasedDeduplication: !Ref ContentBasedDeduplication
      FifoQueue: !Ref FifoQueue
      Tags: 
      - 
        Key: "env"
        Value: !Ref Env
      - 
        Key: "service"
        Value: !Ref Product
      - 
        Key: "stack"
        Value: !Sub ${AWS::StackName}
      - 
        Key: "squad"
        Value: "squad-cloud"
      - 
        Key: "slack"
        Value: "squad-cloud"
      - 
        Key: "email"
        Value: "cloud"
      - 
        Key: "resource"
        Value: "sqs"
    
  sqsTrigger:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: !Ref BatchSize
      Enabled: false
      EventSourceArn: !GetAtt queueReplicaData.Arn
      FunctionName: !GetAtt queueReplicaData.Arn

Outputs:
  
  dynamoDBReplicaData:
    Description: Export to Arn AWS Lambda dynamoDBReplicaData
    Value: !GetAtt dynamoDBReplicaData.Arn
    Export:
      Name: dynamoDBReplicaData
